#!/bin/bash

#=================================================
# GENERIC START
#=================================================

# IMPORT GENERIC HELPERS
source /usr/share/yunohost/helpers

# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

# Load common variables and helpers
source ./experimental_helper.sh
source ./_common.sh

# Retrieve app settings
domain=$(ynh_app_setting_get "$app" domain)
path_url=$(ynh_normalize_url_path $(ynh_app_setting_get "$app" path))
dbpass=$(ynh_app_setting_get "$app" mysqlpwd)
admin=$(ynh_app_setting_get "$app" adminusername)
key=$(ynh_app_setting_get "$app" secret_key)
is_public=$(ynh_app_setting_get "$app" is_public)
port=$(ynh_app_setting_get "$app" web_port)
upstream_version=$(ynh_app_setting_get $app upstream_version)

# Backup the current version of the app
ynh_backup_before_upgrade
ynh_clean_setup () {
    ynh_restore_upgradebackup
}

# Stop service
systemctl stop "$app".service

#=================================================
# MIGRATION FROM GOGS
#=================================================

[[ $YNH_APP_ID == "gogs" ]] \
    && [[ "$(cat "/opt/$app/templates/.VERSION")" != 0.11.79.1211 ]] \
    && ynh_die "It look like that you have an old gogs install. You need first upgrade gogs instance (id : $gogs_migrate_id) and after migrate to gitea."
ynh_handle_app_migration gogs gogs_migrations

if [[ $migration_process -eq 1 ]]; then
    # Reload variables
    dbname=$app
    dbuser=$app
    final_path="/opt/$app"
    DATADIR="/home/$app"
    REPO_PATH="$DATADIR/repositories"
    DATA_PATH="$DATADIR/data"

    # Replace the user
    ynh_system_user_delete $old_app
    test getent passwd "$app" &>/dev/null || \
        useradd -d "$DATADIR" --system --user-group "$app" --shell /bin/bash || \
            ynh_die "Unable to create $app system account"

    # Clean old binary
    ynh_secure_remove $final_path/gogs
    ynh_secure_remove $final_path/custom/conf/auth.d

    # Restore authentication from SQL database
    ynh_replace_string "__ADMIN__" "$admin" ../conf/login_source.sql
    ynh_replace_string "__APP__" "$app" ../conf/login_source.sql
    ynh_mysql_connect_as "$dbuser" "$dbpass" "$dbname" < ../conf/login_source.sql

    # Fix hooks
    if [[ -e $REPO_PATH ]];then
        ls $REPO_PATH/*/*.git/hooks/pre-receive | while read p; do
            ynh_secure_remove $p
        done
        ls $REPO_PATH/*/*.git/hooks/post-receive | while read p; do
            ynh_secure_remove $p
        done
    fi

    upstream_version="0.0.1"
fi

#=================================================
# STANDARD UPGRADE STEPS
#=================================================

# Clean template to fix issue : https://github.com/gogits/gogs/issues/4585
ynh_secure_remove "/opt/$app/templates"

# Configure gitea with app.ini file
config_gitea

# Configure init script
ynh_add_systemd_config

# Modify Nginx configuration file and copy it to Nginx conf directory
config_nginx

#=================================================
# DB migration
#=================================================

# Before the version 1.7 the upstream version was not stored
# The way to find the version for the install < 1.7 is to parse the binary file to find which version is installed
if [ -z ${upstream_version:-} ]; then
    for version in "0.0." "1.0." "1.1." "1.2." "1.3." "1.4." "1.5." "1.6." "1.7."; do
        if strings $final_path/gitea | grep -P "^${version//./\\.}\d"; then
            upstream_version="${version}0"
            break
        fi
    done
fi

restart_gitea() {
    # Set permissions
    set_permission
    ynh_systemd_action -l "Serving \[::\]:$port with pid" -p "systemd"
    # Leave the time to update the database schema
    sleep 5
    systemctl stop $app
}

case $upstream_version in
"0.0."* )
    ynh_setup_source $final_path source/${architecture}_1.0
    set_permission
    systemctl start $app
    sleep 20
    systemctl stop $app
;&
"1.0."* )
    ynh_setup_source $final_path source/${architecture}_1.1
    restart_gitea
;&
"1.1."* )
    ynh_setup_source $final_path source/${architecture}_1.2
    restart_gitea
;&
"1.2."* )
    ynh_setup_source $final_path source/${architecture}_1.3
    restart_gitea
;&
"1.3."* )
    ynh_setup_source $final_path source/${architecture}_1.4
    restart_gitea
;&
"1.4."* )
    ynh_setup_source $final_path source/${architecture}_1.5
    restart_gitea
;&
"1.5."* )
    ynh_setup_source $final_path source/${architecture}_1.6
    restart_gitea
;&
"1.6."* )
    ynh_setup_source $final_path source/${architecture}_1.7
    restart_gitea
;&
esac

# Install gitea
ynh_setup_source $final_path source/$architecture

#=================================================
# GENERIC FINALIZATION
#=================================================

# Set permissions
set_permission

# Save Version
ynh_app_setting_set $app upstream_version $(ynh_app_upstream_version)

# Unprotect root from SSO if public
set_access_settings

# Reload services
ynh_systemd_action -l "Serving \[::\]:$port with pid" -p "systemd"
sleep 1

# Store the checksum with the 'INTERNAL_TOKEN' value.
# Should be removed when the issue https://github.com/go-gitea/gitea/issues/3246 is fixed
ynh_store_file_checksum "$final_path/custom/conf/app.ini"

#=================================================
# FINISH MIGRATION PROCESS
#=================================================

if [[ $migration_process -eq 1 ]]; then
    echo "gogs has been successfully migrated to Gitea! \
A last scheduled operation will run in a couple of minutes to finish the \
migration in YunoHost side. Do not proceed any application operation while \
you don't see Gogs as installed." >&2

    # Execute a post migration script after the end of this upgrade.
    # Mainly for some cleaning
    script_post_migration=gogs_post_migration.sh
    ynh_replace_string "__OLD_APP__" "$old_app" ../conf/$script_post_migration
    ynh_replace_string "__NEW_APP__" "$app" ../conf/$script_post_migration
    cp ../conf/$script_post_migration /tmp
    chmod +x /tmp/$script_post_migration
    (cd /tmp; echo "/tmp/$script_post_migration > /tmp/$script_post_migration.log 2>&1" | at now + 2 minutes)
fi
